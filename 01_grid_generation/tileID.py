# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Create_16ha_fishnetXY.py
# Created on: 2016-07-18 13:11:24.00000
#   (generated by ArcGIS/ModelBuilder)
# Description:
#
#Processing time: 3 hrs 15 min 18 sec (A105338)
# ---------------------------------------------------------------------------

#Processing time on A105338 (locally) for 100mile house TSA: 2 hrs 36 min 40 sec

# --------------------------------------------------------------------------------------------------------------------------------------------------------------
## New

# Imports
import arcpy
import inspect
import preprocess_tools

class TileID(object):
	def __init__(self, workspace, number_of_tiles, ProgressPrinter):
		arcpy.env.workspace = workspace
		arcpy.env.overwriteOutput=True

		self.ProgressPrinter = ProgressPrinter

		self.numberofTiles = number_of_tiles

		self.XYgrid = "XYgrid"
		self.XYgrid_temp = "XYgrid_temp"

	def runTileID(self):
		pp = self.ProgressPrinter.newProcess(inspect.stack()[0][3], 3)
		pp.start()
		self._addField()
		self._makeFeatureLayer()
		self._tileIDs()
		pp.finish()

	def _addField(self):
		arcpy.AddField_management(self.XYgrid, "TileID", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

	def _makeFeatureLayer(self):
		arcpy.MakeFeatureLayer_management(self.XYgrid, self.XYgrid_temp)

	def _tileIDs(self):
		cur = arcpy.UpdateCursor(self.XYgrid_temp, sort_fields = "Y_ID D")
		max = cur.next().getValue("Y_ID")
		print "Max value for gridding is:", max
		division = round(max / self.numberofTiles,0) +1
		print "Tiles will be split every", division, "records."
		for row in cur:
		    # The variable 'age' will get the value from the column
		    yValue = row.getValue("Y_ID")
		    value = int(yValue /division)+1
		    if yValue == max:
		        row.setValue("TileID", self.numberofTiles)
		    else:
		        row.setValue("TileID", value)
		    cur.updateRow(row)



# --------------------------------------------------------------------------------------------------------------------------------------------------------------
## Old Script
'''
# Working location:
arcpy.env.workspace = r"H:\Nick\GCBM\04_DogRiver\05_working\02_layers\01_external_spatial_data\00_Workspace.gdb"
# Local variables:
resolution_meters = 100
numberofTiles = 16

XYgrid_1ha = "XYgrid_1ha"
XYgrid_temp = "XYgrid_1ha_temp"


print "Start time: " +(time.strftime('%a %H:%M:%S'))



# Process: Add Field (12)
arcpy.AddField_management(XYgrid_1ha, "TileID", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

print "Finished creating fields. " +(time.strftime('%a %H:%M:%S'))


# Make Feature Layer
arcpy.MakeFeatureLayer_management(XYgrid_1ha, XYgrid_1ha_temp)

cur = arcpy.UpdateCursor(XYgrid_1ha_temp, sort_fields = "Y_ID D")
max = cur.next().getValue("Y_ID")
print "Max value for gridding is:",
print max
division = round(max / numberofTiles,0) +1
print "Tiles will be split every",
print division,
print "records."
#Need to set tile for first cell separately apparently...
progress = 0
all_rows = arcpy.GetCount_management("XYgrid_1ha_temp")
nrows = int(all_rows.getOutput(0))
for row in cur:
    progress += 1
    # The variable 'age' will get the value from the column
    yValue = row.getValue("Y_ID")
    value = int(yValue /division)+1
    if yValue == max:
        row.setValue("TileID", numberofTiles)
    else:
        row.setValue("TileID", value)
    cur.updateRow(row)
    sys.stdout.write("Progress: [{}%] \r".format(round(float(progress)/float(nrows),3)*100))
    sys.stdout.flush()

print "Finished calculating fields. " +(time.strftime('%a %H:%M:%S'))
'''
